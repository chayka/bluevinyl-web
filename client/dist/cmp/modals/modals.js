"use strict";Vue.component("modal",{props:["visible","width","height","title","buttons","cls"],template:' <div class="surge-modals-fader" v-if="visible" @click.self="hide(\'close\')">\n                    <div :class="[\'modals-modal\'].concat(cls || \'\').join(\' \')" :style="{width: width || \'\', height: height || \'\'}">\n                        <div class="modal_header">\n                            <div class="modal_header-title">{{title}}</div>\n                            <div class="modal_header-close" @click="hide(\'close\')">&times;</div>\n                        </div>\n                        <div class="modal_body"><slot></slot></div>\n                        <div class="modal_buttons" v-if="buttons && buttons.length">\n                            <button v-for="button of buttons"\n                                    @click.prevent="button.persist || hide(button.value!==undefined? button.value : button.text); button.click && button.click();"\n                                    :class="[\'button\'].concat(button.cls).join(\' \')">{{button.text}}</button>\n                        </div>\n                    </div>\n                </div>',data:function(){return{visible:!1,width:"300px",height:"auto",title:"",buttons:[],cls:""}},methods:{show:function(){this.visible=!0},open:function(){this.show()},hide:function(payload){this.visible=!1,this.$emit("hide",payload||"unknown")},close:function(payload){this.hide(payload)}},created:function(){}}),Vue.component("modals",{template:' <div class="modals">\n                    <modal ref="modal" v-for="(modal, i) in queue"\n                       :title="modal.title"\n                       :buttons="modal.buttons"\n                       :cls="modal.cls"\n                       :width="modal.width"\n                       :height="modal.height"\n                       :visible="!i" \n                       @hide="close()">\n                        {{modal.content}}\n                    </modal>\n                </div>',data:function(){return{queue:[]}},computed:{modal:function(){return this.queue.length?this.queue[0]:null}},methods:{show:function(modal){var defaults={content:"",title:"",buttons:[],cls:[],width:"300px",height:"auto"};this.queue.push(Object.assign(defaults,modal)),this.$set(this,"queue",this.queue),this.$forceUpdate()},open:function(modal){this.show(modal)},hide:function(){this.queue.shift(),this.$set(this,"queue",this.queue),this.$forceUpdate()},close:function(){this.hide()},alert:function(message){var title=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",okCallback=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.show({content:message,title:title,cls:["alert","pre-line"],buttons:[{text:"Ok",click:okCallback}]})},confirm:function(message){var title=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",yesCallback=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.show({content:message,title:title,cls:["confirm","pre-line"],buttons:[{text:"No"},{text:"Yes",click:yesCallback}]})}},created:function(){Vue.$modals=Vue.$modals||this}});
//# sourceMappingURL=modals.js.map
