"use strict";Vue.component("spinner",{props:["mode","message","visible"],template:" <div class=\"surge-spinner\"\n                    :style=\"{display: mode === 'display' && !visible ? 'none' : '', visibility: mode === 'visibility' && !visible ? 'hidden' : ''}\">\n                    <span class=\"spinner-message\" v-if=\"!message\"><slot></slot></span>\n                    <span class=\"spinner-message\" v-if=\"!!message\">{{message}}</span>\n                </div>",data:function(){return{mode:"display",message:"",visible:!1}},methods:{show:function(){var message=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.message=message,this.visible=!0},hide:function(){this.visible=!1}}}),Vue.component("spinners",{template:' <div class="surge-spinners" v-if="spinners.length">\n                    <div class="spinners">\n                        <spinner v-for="spinner of spinners" :message="spinner.message" :visible="true"></spinner>\n                    </div>\n                </div>',data:function(){return{spinners:[],counter:0}},methods:{show:function(){var message=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Loading...",id=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",spinner={id:id||"spinners_"+ ++this.counter,message:message};return this.spinners.push(spinner),this.$forceUpdate(),spinner.id},hide:function(id){var index=this.spinners.findIndex(function(value){return id===value.id});index>=0&&this.spinners.splice(index,1),this.$forceUpdate()}},created:function(){Vue.$spinners=Vue.$spinners||this}});
//# sourceMappingURL=spinners.js.map
