{"version":3,"sources":["cmp/spinners/spinners.js"],"names":["Vue","component","props","data","mode","message","visible","methods","show","arguments","length","undefined","this","hide","template","spinners","counter","id","spinner","$forceUpdate","push","index","findIndex","value","splice","created","$spinners"],"mappings":"YAAAA,KAAIC,UAAU,WACVC,OAAQ,OAAQ,UAAW,WAD3BD,SAAAA,uYASQE,KATa,WAUb,OACAC,KAAA,UAHJC,QAAA,GARiBC,SAAA,IAcrBC,SAMsBC,KANb,WAMa,GAAAH,SAAAI,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAA,EACdG,MAAKP,QAAUA,QAAfO,KAAKP,SAAUA,GAOnBQ,KAdK,WAeDD,KAAKN,SAAU,MA7BFN,IAAzBC,UAAA,YAmCIa,SAAAA,2QAOQC,KA1CZ,WA2CYC,OAFJD,YAPkBC,QAAA,IAclBT,SASsCC,KATtC,WASsC,GAAAH,SAAAI,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAA,aAAAQ,GAAAR,UAAAC,OAAA,GAAAC,SAAAF,UAAA,GAAAA,UAAA,GAAA,GAATQ,SAErBA,GAAIA,IAAAA,eAAoBL,KAAKI,QAD7BE,QAAAA,QAIJ,OAFIb,MAAAA,SAAAA,KAAAA,SAFUO,KAAdO,eAIKJ,QAASK,IAUlBP,KAxBA,SAwBKI,IACD,GAAII,OAAQT,KAAKG,SAASO,UAAU,SAAAC,OAAA,MAASN,MAAOM,MAAMN,IACvDI,QAAS,GA3BXT,KAAAG,SAAAS,OAyBIH,MAAA,GAC+BT,KAAAO,iBAIpCM,QA7EZ,WA8ESzB,IAAA0B,UAAA1B,IAAA0B,WAAAd","file":"spinners.js","sourcesContent":["Vue.component('spinner', {\n    props: ['mode', 'message', 'visible'],\n    template: ` <div class=\"surge-spinner\"\n                    :style=\"{display: mode === 'display' && !visible ? 'none' : '', visibility: mode === 'visibility' && !visible ? 'hidden' : ''}\">\n                    <span class=\"spinner-message\" v-if=\"!message\"><slot></slot></span>\n                    <span class=\"spinner-message\" v-if=\"!!message\">{{message}}</span>\n                </div>`,\n    data(){\n        return {\n            'mode': 'display',\n            'message': '',\n            'visible': false,\n        };\n    },\n    methods: {\n\n        /**\n         * Show spinner with a message\n         * @param message\n         */\n        show(message = ''){\n            this.message = message;\n            this.visible = true;\n        },\n\n        /**\n         * Hide spinner\n         */\n        hide(){\n            this.visible = false;\n        }\n    }\n});\n\nVue.component('spinners', {\n    template: ` <div class=\"surge-spinners\" v-if=\"spinners.length\">\n                    <div class=\"spinners\">\n                        <spinner v-for=\"spinner of spinners\" :message=\"spinner.message\" :visible=\"true\"></spinner>\n                    </div>\n                </div>`,\n    data(){\n        return {\n            spinners: [],\n            counter: 0,\n        }\n    },\n\n    methods: {\n        /**\n         * Adds message to a queue, returns spinner id.\n         * When queue is non empty, the top item is shown.\n         * On mouse over, whole stack is shown.\n         *\n         * @param {string} message\n         * @param {string} id\n         * @return {string}\n         */\n        show(message = 'Loading...', id = '') {\n            let spinner = {\n                id: id || `spinners_${++this.counter}`,\n                message\n            };\n            this.spinners.push(spinner);\n            this.$forceUpdate();\n            return spinner.id;\n        },\n\n        /**\n         * Removes message from stack.\n         * When stack is empty, general spinner is hidden\n         * @param id\n         */\n        hide(id) {\n            let index = this.spinners.findIndex(value => id === value.id);\n            if(index >= 0){\n                this.spinners.splice(index, 1);\n            }\n            this.$forceUpdate();\n        }\n\n    },\n\n    created(){\n        Vue.$spinners = Vue.$spinners || this;\n    }\n});"]}